LIBRERIA <string.h>

	#include <string.h>

--------------------------------------------------------------------------
strlen        Calcolare la lunghezza di una stringa di caratteri
					(senza contare il carattere)
    PROTOTIPO:
	size_t strlen(const char* nomeStringa);
	
	size_t  --> tipo speciale che indica che la funzione restituisce 
				un numero corrispondente a una dimensione


	La funzione assume un'impostazione di tipo [const char*]

    ESEMPIO DI CODICE:
	int lunghezzaSringa
	lunghezzaStringa = strlen( nomeStringa );


---------------------------------------------------------------------------
strcpy 	      Consente di copiare una stringa all'interno di un'altra.

    PROTOTIPO:
       char* strcpy(char* copiaDellaStringa, const char* stringaDaCopiare);

       [char* copiaDellaStringa] --> puntatore a char della tabella nella quale incolleró
       [char* stringaDaCopiare]	 --> puntatore a char

    ESEMPIO DI CODICE:
	
	char stringa[] = "Texte";
	char copia[100] = {0};

 	strcpy(copia, stringa); 	//scrivo "Texte" dentro a copia

--------------------------------------------------------------------------

strcat 		Concatenare due stringhe in sequenza
			aggiunge una stringa a un'altra
		
     PROTOTIPO:
	char* strcat(char* stringa1, const char* stringa2);

	la funzione aggiunge a stringa1 in contenuto di stringa2
	
    ESEMPIO DI CODICE:
	char stringa1[100] = "Salut ";
	char stringa2[] = "Mateo21";

    	strcat(chaine1, chaine2); 	//stringa1 conterrá "Salut Mateo21"

--------------------------------------------------------------------------
strcmp	        Confronta 2 stringhe (importante il RETOURN)

     PROTOTIPO:
	int strcmp(const char* stringa1, const char* stringa2);

	restituisce 0 se le due stringhe sono uguali 
	restituisce un altro valore se sono diverse

     ESEMPIO DI CODICE:

	char stringa1[] = "Texte de test";
	char stringa2[] = "Texte de test";

    	if ( strcmp(stringa1, stringa2) == 0 ){
        	printf("stringhe uguali\n");
    	}
    	else{
        	printf("stringhe diverse\n");
    	}	


--------------------------------------------------------------------------
strchr	       Inizia a leggere da un determinato carattere della stringa

	       RETURN = a 1 se trova il carattere

     PROTOTIPO:
	char* strchr(const char* stringa, int carattereDaCercare);

     ESEMPIO DI CODICE:
	char stringa[] = "Texte de test";
	char stringa[] * dopoIlCarattere = NULL; //puntatore di un array di char settato inizialmente a NULL

    	dopoIlCarattere = strchr(stringa, 'd'); 	//salvo l'indirizzo del char d all'interno del puntatore
    	
	if (dopoIlCarattere != NULL){
        	printf("Ecco quello che trovo dopo il carattere d : %s", dopoIlCarattere);
    	}

	/*VIENE STAMPATO*/
	//Ecco quello che trovo dopo il carattere d : de test




--------------------------------------------------------------------------
strpbrk 	Funziona come la precedente solo che si puó cercare 
		piu di una lettera alla volta

     RETURN = a 1 se trova uno dei caratteri 

     PROTOTIPO:
	char* strpbrk(const char* stringa, const char* lettereDaCercare);

     ESEMPIO DI CODICE:

    	char * continuoStringa;

     
    	continuoStringa = strpbrk("Texte de test", "xds");

    	if ( continuoStringa != NULL){
        	printf("Ecco quello che c'é dopo uno dei caratteri ricercati x d s : %s", continuoStringa);
  	}

	/*VIENE STAMPATO*/
	//Ecco quello che c'é dopo uno dei caratteri ricercati x d s : te de test




--------------------------------------------------------------------------
strstr		Ricerca di una stringa in un altra 

     RETURN = a 1 se trova la stringa da cercare 

     PROTOTIPO:
	char* strstr(const char* stringa, const char* stringaDaCercare);

     ESEMPIO DI CODICE:

	char * continuoStringa;

    
    	continuoStringa = strstr("Texte de test", "test");

    	if (suiteChaine != NULL){

       		printf("Ho trovato : %s\n", continuoStringa);
    	}

	/*VIENE STAMPATO*/
	//Ho trovato : test

--------------------------------------------------------------------------

sprintf 	Scrivere in una stringa 

     PROTOTIPO:
	sprintf( nomeStringa , "ho %d cose da scrivere", numeroDiCose );

     ESEMPIO DI CODICE:

	char nomeStringa[100];
	int numeroDiCose = 5;

	sprintf( nomeStringa , "ho %d cose da scrivere", numeroDiCose );
	
	printf("%s" , nomeStringa );

	/*VIENE STAMPATO*/
	//ho 5 cose da scrivere
	



















	

